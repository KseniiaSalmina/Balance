{
    "swagger": "2.0",
    "info": {
        "description": "This is a microservice to manage users balances",
        "title": "Balance management API",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8088",
    "paths": {
        "/wallets/{id}/balance": {
            "get": {
                "description": "get user balance by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Get user balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/wallets/{id}/history": {
            "get": {
                "description": "get user transaction history by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Get user balance history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "date",
                            "amount"
                        ],
                        "type": "string",
                        "description": "string enums, default: date",
                        "name": "orderBy",
                        "in": "path"
                    },
                    {
                        "enum": [
                            "DESC",
                            "ASC"
                        ],
                        "type": "string",
                        "description": "string enums, default: DESC",
                        "name": "order",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "default: 100",
                        "name": "limit",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/wallet.HistoryChange"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/wallets/{id}/transaction": {
            "patch": {
                "description": "produce transaction to change user balance. Support replenishment, withdrawal and transfer between users",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "changing"
                ],
                "summary": "Change user balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "info about transaction",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.changingBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.changingBalanceRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "for a transfer must be a positive number, for a not transfer transaction reports whether the operation is a replenishment (positive amount) or withdrawal (negative)",
                    "type": "number"
                },
                "description": {
                    "description": "required for a not transfer transactions",
                    "type": "string"
                },
                "isTransfer": {
                    "description": "reports whether transaction is a transfer or not, default false",
                    "type": "boolean"
                },
                "to": {
                    "description": "required for a transfer",
                    "type": "integer"
                }
            }
        },
        "wallet.HistoryChange": {
            "type": "object",
            "properties": {
                "Operation": {
                    "type": "string",
                    "enum": [
                        "replenishment",
                        "withdrawal"
                    ],
                    "x-enum-varnames": [
                        "Replenishment",
                        "Withdrawal"
                    ]
                },
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                }
            }
        }
    }
}